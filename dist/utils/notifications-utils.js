"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createNotification = createNotification;
exports.successNotification = exports.errorNotification = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _utils = require("./utils");

var _defaultSettings = require("../constants/default-settings");

// Copyright (c) 2019 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

/**
 * Creates a notofication
 * @param {string} message - Message to display during the notification
 * @param {string} [type] - The type of message. One of DEFAULT_NOTIFICATION_TYPES
 * @param {string} [topic] - The topic the notification belongs to. One of DEFAULT_NOTIFICATION_TOPICS
 * @param {string} [id] optional id for notification. If not provided it will be generated by the method
 * @param {object} [options] - Extra parameters to store as part of hte notification
 * @returns {object}
 */
function createNotification(_ref) {
  var _ref$message = _ref.message,
      message = _ref$message === void 0 ? _defaultSettings.DEFAULT_NOTIFICATION_MESSAGE : _ref$message,
      _ref$type = _ref.type,
      type = _ref$type === void 0 ? _defaultSettings.DEFAULT_NOTIFICATION_TYPES.info : _ref$type,
      _ref$topic = _ref.topic,
      topic = _ref$topic === void 0 ? _defaultSettings.DEFAULT_NOTIFICATION_TOPICS.global : _ref$topic,
      _ref$id = _ref.id,
      id = _ref$id === void 0 ? (0, _utils.generateHashId)(_defaultSettings.DEFAULT_UUID_COUNT) : _ref$id,
      options = (0, _objectWithoutProperties2["default"])(_ref, ["message", "type", "topic", "id"]);
  return (0, _objectSpread2["default"])({}, options, {
    id: id,
    message: message,
    type: type,
    topic: topic
  });
}
/**
 * Creates an error notification
 * @param options
 * @returns {{topic, id, message, type: (null|number)}}
 */


var errorNotification = function errorNotification(options) {
  return (0, _objectSpread2["default"])({}, createNotification(options), {
    type: _defaultSettings.DEFAULT_NOTIFICATION_TYPES.error
  });
};
/**
 * Creates a success notification
 * @param options
 * @returns {{topic, id, message, type: null}}
 */


exports.errorNotification = errorNotification;

var successNotification = function successNotification(options) {
  return (0, _objectSpread2["default"])({}, createNotification(options), {
    type: _defaultSettings.DEFAULT_NOTIFICATION_TYPES.success
  });
};

exports.successNotification = successNotification;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9ub3RpZmljYXRpb25zLXV0aWxzLmpzIl0sIm5hbWVzIjpbImNyZWF0ZU5vdGlmaWNhdGlvbiIsIm1lc3NhZ2UiLCJERUZBVUxUX05PVElGSUNBVElPTl9NRVNTQUdFIiwidHlwZSIsIkRFRkFVTFRfTk9USUZJQ0FUSU9OX1RZUEVTIiwiaW5mbyIsInRvcGljIiwiREVGQVVMVF9OT1RJRklDQVRJT05fVE9QSUNTIiwiZ2xvYmFsIiwiaWQiLCJERUZBVUxUX1VVSURfQ09VTlQiLCJvcHRpb25zIiwiZXJyb3JOb3RpZmljYXRpb24iLCJlcnJvciIsInN1Y2Nlc3NOb3RpZmljYXRpb24iLCJzdWNjZXNzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQW9CQTs7QUFFQTs7QUF0QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBU0E7Ozs7Ozs7OztBQVNPLFNBQVNBLGtCQUFULE9BTUo7QUFBQSwwQkFMREMsT0FLQztBQUFBLE1BTERBLE9BS0MsNkJBTFNDLDZDQUtUO0FBQUEsdUJBSkRDLElBSUM7QUFBQSxNQUpEQSxJQUlDLDBCQUpNQyw0Q0FBMkJDLElBSWpDO0FBQUEsd0JBSERDLEtBR0M7QUFBQSxNQUhEQSxLQUdDLDJCQUhPQyw2Q0FBNEJDLE1BR25DO0FBQUEscUJBRkRDLEVBRUM7QUFBQSxNQUZEQSxFQUVDLHdCQUZJLDJCQUFlQyxtQ0FBZixDQUVKO0FBQUEsTUFERUMsT0FDRjtBQUNELDRDQUNLQSxPQURMO0FBRUVGLElBQUFBLEVBQUUsRUFBRkEsRUFGRjtBQUdFUixJQUFBQSxPQUFPLEVBQVBBLE9BSEY7QUFJRUUsSUFBQUEsSUFBSSxFQUFKQSxJQUpGO0FBS0VHLElBQUFBLEtBQUssRUFBTEE7QUFMRjtBQU9EO0FBRUQ7Ozs7Ozs7QUFLTyxJQUFNTSxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQW9CLENBQUFELE9BQU87QUFBQSw0Q0FDakNYLGtCQUFrQixDQUFDVyxPQUFELENBRGU7QUFDSlIsSUFBQUEsSUFBSSxFQUFFQyw0Q0FBMkJTO0FBRDdCO0FBQUEsQ0FBakM7QUFHUDs7Ozs7Ozs7O0FBS08sSUFBTUMsbUJBQW1CLEdBQUcsU0FBdEJBLG1CQUFzQixDQUFBSCxPQUFPO0FBQUEsNENBQ25DWCxrQkFBa0IsQ0FBQ1csT0FBRCxDQURpQjtBQUNOUixJQUFBQSxJQUFJLEVBQUVDLDRDQUEyQlc7QUFEM0I7QUFBQSxDQUFuQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAxOSBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4vLyBUSEUgU09GVFdBUkUuXG5cbmltcG9ydCB7Z2VuZXJhdGVIYXNoSWR9IGZyb20gJy4vdXRpbHMnO1xuXG5pbXBvcnQge1xuICBERUZBVUxUX05PVElGSUNBVElPTl9NRVNTQUdFLCBERUZBVUxUX05PVElGSUNBVElPTl9UT1BJQ1MsXG4gIERFRkFVTFRfTk9USUZJQ0FUSU9OX1RZUEVTLCBERUZBVUxUX1VVSURfQ09VTlRcbn0gZnJvbSAnY29uc3RhbnRzL2RlZmF1bHQtc2V0dGluZ3MnO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBub3RvZmljYXRpb25cbiAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIC0gTWVzc2FnZSB0byBkaXNwbGF5IGR1cmluZyB0aGUgbm90aWZpY2F0aW9uXG4gKiBAcGFyYW0ge3N0cmluZ30gW3R5cGVdIC0gVGhlIHR5cGUgb2YgbWVzc2FnZS4gT25lIG9mIERFRkFVTFRfTk9USUZJQ0FUSU9OX1RZUEVTXG4gKiBAcGFyYW0ge3N0cmluZ30gW3RvcGljXSAtIFRoZSB0b3BpYyB0aGUgbm90aWZpY2F0aW9uIGJlbG9uZ3MgdG8uIE9uZSBvZiBERUZBVUxUX05PVElGSUNBVElPTl9UT1BJQ1NcbiAqIEBwYXJhbSB7c3RyaW5nfSBbaWRdIG9wdGlvbmFsIGlkIGZvciBub3RpZmljYXRpb24uIElmIG5vdCBwcm92aWRlZCBpdCB3aWxsIGJlIGdlbmVyYXRlZCBieSB0aGUgbWV0aG9kXG4gKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdIC0gRXh0cmEgcGFyYW1ldGVycyB0byBzdG9yZSBhcyBwYXJ0IG9mIGh0ZSBub3RpZmljYXRpb25cbiAqIEByZXR1cm5zIHtvYmplY3R9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVOb3RpZmljYXRpb24oe1xuICBtZXNzYWdlID0gREVGQVVMVF9OT1RJRklDQVRJT05fTUVTU0FHRSxcbiAgdHlwZSA9IERFRkFVTFRfTk9USUZJQ0FUSU9OX1RZUEVTLmluZm8sXG4gIHRvcGljID0gREVGQVVMVF9OT1RJRklDQVRJT05fVE9QSUNTLmdsb2JhbCxcbiAgaWQgPSBnZW5lcmF0ZUhhc2hJZChERUZBVUxUX1VVSURfQ09VTlQpLFxuICAuLi5vcHRpb25zXG59KSB7XG4gIHJldHVybiB7XG4gICAgLi4ub3B0aW9ucyxcbiAgICBpZCxcbiAgICBtZXNzYWdlLFxuICAgIHR5cGUsXG4gICAgdG9waWNcbiAgfTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGFuIGVycm9yIG5vdGlmaWNhdGlvblxuICogQHBhcmFtIG9wdGlvbnNcbiAqIEByZXR1cm5zIHt7dG9waWMsIGlkLCBtZXNzYWdlLCB0eXBlOiAobnVsbHxudW1iZXIpfX1cbiAqL1xuZXhwb3J0IGNvbnN0IGVycm9yTm90aWZpY2F0aW9uID0gb3B0aW9ucyA9PlxuICAoey4uLmNyZWF0ZU5vdGlmaWNhdGlvbihvcHRpb25zKSwgdHlwZTogREVGQVVMVF9OT1RJRklDQVRJT05fVFlQRVMuZXJyb3J9KTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgc3VjY2VzcyBub3RpZmljYXRpb25cbiAqIEBwYXJhbSBvcHRpb25zXG4gKiBAcmV0dXJucyB7e3RvcGljLCBpZCwgbWVzc2FnZSwgdHlwZTogbnVsbH19XG4gKi9cbmV4cG9ydCBjb25zdCBzdWNjZXNzTm90aWZpY2F0aW9uID0gb3B0aW9ucyA9PlxuICAoey4uLmNyZWF0ZU5vdGlmaWNhdGlvbihvcHRpb25zKSwgdHlwZTogREVGQVVMVF9OT1RJRklDQVRJT05fVFlQRVMuc3VjY2Vzc30pO1xuIl19