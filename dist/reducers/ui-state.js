"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.uiStateReducerFactory = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _reduxActions = require("redux-actions");

var _actionTypes = _interopRequireDefault(require("../constants/action-types"));

var uiStateUpdaters = _interopRequireWildcard(require("./ui-state-updaters"));

var _actionHandler;

/**
 * Important: Do not rename `actionHandler` or the assignment pattern of property value.
 * It is used to generate documentation
 */
var actionHandler = (_actionHandler = {}, (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].TOGGLE_SIDE_PANEL, uiStateUpdaters.toggleSidePanelUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].TOGGLE_MODAL, uiStateUpdaters.toggleModalUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SHOW_EXPORT_DROPDOWN, uiStateUpdaters.showExportDropdownUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].HIDE_EXPORT_DROPDOWN, uiStateUpdaters.hideExportDropdownUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].OPEN_DELETE_MODAL, uiStateUpdaters.openDeleteModalUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].TOGGLE_MAP_CONTROL, uiStateUpdaters.toggleMapControlUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].ADD_NOTIFICATION, uiStateUpdaters.addNotificationUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].REMOVE_NOTIFICATION, uiStateUpdaters.removeNotificationUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_RATIO, uiStateUpdaters.setRatioUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_RESOLUTION, uiStateUpdaters.setResolutionUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].TOGGLE_LEGEND, uiStateUpdaters.toggleLegendUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].START_EXPORTING_IMAGE, uiStateUpdaters.startExportingImage), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_IMAGE_DATA_URI, uiStateUpdaters.setExportImageDataUri), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].CLEANUP_EXPORT_IMAGE, uiStateUpdaters.cleanupExportImage), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_SELECTED_DATASET, uiStateUpdaters.setExportSelectedDatasetUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_DATA_TYPE, uiStateUpdaters.setExportDataTypeUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_FILTERED, uiStateUpdaters.setExportFilteredUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_DATA, uiStateUpdaters.setExportDataUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_USER_MAPBOX_ACCESS_TOKEN, uiStateUpdaters.setUserMapboxAccessTokenUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_MAP_FORMAT, uiStateUpdaters.setExportMapFormat), _actionHandler);
/* Reducer */

var uiStateReducerFactory = function uiStateReducerFactory() {
  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return (0, _reduxActions.handleActions)(actionHandler, (0, _objectSpread2["default"])({}, uiStateUpdaters.INITIAL_UI_STATE, initialState, {
    initialState: initialState
  }));
};

exports.uiStateReducerFactory = uiStateReducerFactory;

var _default = uiStateReducerFactory();

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZWR1Y2Vycy91aS1zdGF0ZS5qcyJdLCJuYW1lcyI6WyJhY3Rpb25IYW5kbGVyIiwiQWN0aW9uVHlwZXMiLCJUT0dHTEVfU0lERV9QQU5FTCIsInVpU3RhdGVVcGRhdGVycyIsInRvZ2dsZVNpZGVQYW5lbFVwZGF0ZXIiLCJUT0dHTEVfTU9EQUwiLCJ0b2dnbGVNb2RhbFVwZGF0ZXIiLCJTSE9XX0VYUE9SVF9EUk9QRE9XTiIsInNob3dFeHBvcnREcm9wZG93blVwZGF0ZXIiLCJISURFX0VYUE9SVF9EUk9QRE9XTiIsImhpZGVFeHBvcnREcm9wZG93blVwZGF0ZXIiLCJPUEVOX0RFTEVURV9NT0RBTCIsIm9wZW5EZWxldGVNb2RhbFVwZGF0ZXIiLCJUT0dHTEVfTUFQX0NPTlRST0wiLCJ0b2dnbGVNYXBDb250cm9sVXBkYXRlciIsIkFERF9OT1RJRklDQVRJT04iLCJhZGROb3RpZmljYXRpb25VcGRhdGVyIiwiUkVNT1ZFX05PVElGSUNBVElPTiIsInJlbW92ZU5vdGlmaWNhdGlvblVwZGF0ZXIiLCJTRVRfUkFUSU8iLCJzZXRSYXRpb1VwZGF0ZXIiLCJTRVRfUkVTT0xVVElPTiIsInNldFJlc29sdXRpb25VcGRhdGVyIiwiVE9HR0xFX0xFR0VORCIsInRvZ2dsZUxlZ2VuZFVwZGF0ZXIiLCJTVEFSVF9FWFBPUlRJTkdfSU1BR0UiLCJzdGFydEV4cG9ydGluZ0ltYWdlIiwiU0VUX0VYUE9SVF9JTUFHRV9EQVRBX1VSSSIsInNldEV4cG9ydEltYWdlRGF0YVVyaSIsIkNMRUFOVVBfRVhQT1JUX0lNQUdFIiwiY2xlYW51cEV4cG9ydEltYWdlIiwiU0VUX0VYUE9SVF9TRUxFQ1RFRF9EQVRBU0VUIiwic2V0RXhwb3J0U2VsZWN0ZWREYXRhc2V0VXBkYXRlciIsIlNFVF9FWFBPUlRfREFUQV9UWVBFIiwic2V0RXhwb3J0RGF0YVR5cGVVcGRhdGVyIiwiU0VUX0VYUE9SVF9GSUxURVJFRCIsInNldEV4cG9ydEZpbHRlcmVkVXBkYXRlciIsIlNFVF9FWFBPUlRfREFUQSIsInNldEV4cG9ydERhdGFVcGRhdGVyIiwiU0VUX1VTRVJfTUFQQk9YX0FDQ0VTU19UT0tFTiIsInNldFVzZXJNYXBib3hBY2Nlc3NUb2tlblVwZGF0ZXIiLCJTRVRfRVhQT1JUX01BUF9GT1JNQVQiLCJzZXRFeHBvcnRNYXBGb3JtYXQiLCJ1aVN0YXRlUmVkdWNlckZhY3RvcnkiLCJpbml0aWFsU3RhdGUiLCJJTklUSUFMX1VJX1NUQVRFIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFvQkE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQTs7OztBQUlBLElBQU1BLGFBQWEsMEVBQ2hCQyx3QkFBWUMsaUJBREksRUFDZ0JDLGVBQWUsQ0FBQ0Msc0JBRGhDLG9EQUVoQkgsd0JBQVlJLFlBRkksRUFFV0YsZUFBZSxDQUFDRyxrQkFGM0Isb0RBR2hCTCx3QkFBWU0sb0JBSEksRUFHbUJKLGVBQWUsQ0FBQ0sseUJBSG5DLG9EQUloQlAsd0JBQVlRLG9CQUpJLEVBSW1CTixlQUFlLENBQUNPLHlCQUpuQyxvREFLaEJULHdCQUFZVSxpQkFMSSxFQUtnQlIsZUFBZSxDQUFDUyxzQkFMaEMsb0RBTWhCWCx3QkFBWVksa0JBTkksRUFNaUJWLGVBQWUsQ0FBQ1csdUJBTmpDLG9EQU9oQmIsd0JBQVljLGdCQVBJLEVBT2VaLGVBQWUsQ0FBQ2Esc0JBUC9CLG9EQVFoQmYsd0JBQVlnQixtQkFSSSxFQVFrQmQsZUFBZSxDQUFDZSx5QkFSbEMsb0RBVWhCakIsd0JBQVlrQixTQVZJLEVBVVFoQixlQUFlLENBQUNpQixlQVZ4QixvREFXaEJuQix3QkFBWW9CLGNBWEksRUFXYWxCLGVBQWUsQ0FBQ21CLG9CQVg3QixvREFZaEJyQix3QkFBWXNCLGFBWkksRUFZWXBCLGVBQWUsQ0FBQ3FCLG1CQVo1QixvREFhaEJ2Qix3QkFBWXdCLHFCQWJJLEVBYW9CdEIsZUFBZSxDQUFDdUIsbUJBYnBDLG9EQWNoQnpCLHdCQUFZMEIseUJBZEksRUFjd0J4QixlQUFlLENBQUN5QixxQkFkeEMsb0RBZWhCM0Isd0JBQVk0QixvQkFmSSxFQWVtQjFCLGVBQWUsQ0FBQzJCLGtCQWZuQyxvREFpQmhCN0Isd0JBQVk4QiwyQkFqQkksRUFpQjBCNUIsZUFBZSxDQUFDNkIsK0JBakIxQyxvREFrQmhCL0Isd0JBQVlnQyxvQkFsQkksRUFrQm1COUIsZUFBZSxDQUFDK0Isd0JBbEJuQyxvREFtQmhCakMsd0JBQVlrQyxtQkFuQkksRUFtQmtCaEMsZUFBZSxDQUFDaUMsd0JBbkJsQyxvREFvQmhCbkMsd0JBQVlvQyxlQXBCSSxFQW9CY2xDLGVBQWUsQ0FBQ21DLG9CQXBCOUIsb0RBcUJoQnJDLHdCQUFZc0MsNEJBckJJLEVBcUIyQnBDLGVBQWUsQ0FBQ3FDLCtCQXJCM0Msb0RBc0JoQnZDLHdCQUFZd0MscUJBdEJJLEVBc0JvQnRDLGVBQWUsQ0FBQ3VDLGtCQXRCcEMsa0JBQW5CO0FBeUJBOztBQUNPLElBQU1DLHFCQUFxQixHQUFHLFNBQXhCQSxxQkFBd0I7QUFBQSxNQUFDQyxZQUFELHVFQUFnQixFQUFoQjtBQUFBLFNBQ25DLGlDQUFjNUMsYUFBZCxxQ0FBaUNHLGVBQWUsQ0FBQzBDLGdCQUFqRCxFQUFzRUQsWUFBdEU7QUFBb0ZBLElBQUFBLFlBQVksRUFBWkE7QUFBcEYsS0FEbUM7QUFBQSxDQUE5Qjs7OztlQUdRRCxxQkFBcUIsRSIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAxOSBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4vLyBUSEUgU09GVFdBUkUuXG5cbmltcG9ydCB7aGFuZGxlQWN0aW9uc30gZnJvbSAncmVkdXgtYWN0aW9ucyc7XG5pbXBvcnQgQWN0aW9uVHlwZXMgZnJvbSAnY29uc3RhbnRzL2FjdGlvbi10eXBlcyc7XG5pbXBvcnQgKiBhcyB1aVN0YXRlVXBkYXRlcnMgZnJvbSAnLi91aS1zdGF0ZS11cGRhdGVycyc7XG5cbi8qKlxuICogSW1wb3J0YW50OiBEbyBub3QgcmVuYW1lIGBhY3Rpb25IYW5kbGVyYCBvciB0aGUgYXNzaWdubWVudCBwYXR0ZXJuIG9mIHByb3BlcnR5IHZhbHVlLlxuICogSXQgaXMgdXNlZCB0byBnZW5lcmF0ZSBkb2N1bWVudGF0aW9uXG4gKi9cbmNvbnN0IGFjdGlvbkhhbmRsZXIgPSB7XG4gIFtBY3Rpb25UeXBlcy5UT0dHTEVfU0lERV9QQU5FTF06IHVpU3RhdGVVcGRhdGVycy50b2dnbGVTaWRlUGFuZWxVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuVE9HR0xFX01PREFMXTogdWlTdGF0ZVVwZGF0ZXJzLnRvZ2dsZU1vZGFsVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlNIT1dfRVhQT1JUX0RST1BET1dOXTogdWlTdGF0ZVVwZGF0ZXJzLnNob3dFeHBvcnREcm9wZG93blVwZGF0ZXIsXG4gIFtBY3Rpb25UeXBlcy5ISURFX0VYUE9SVF9EUk9QRE9XTl06IHVpU3RhdGVVcGRhdGVycy5oaWRlRXhwb3J0RHJvcGRvd25VcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuT1BFTl9ERUxFVEVfTU9EQUxdOiB1aVN0YXRlVXBkYXRlcnMub3BlbkRlbGV0ZU1vZGFsVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlRPR0dMRV9NQVBfQ09OVFJPTF06IHVpU3RhdGVVcGRhdGVycy50b2dnbGVNYXBDb250cm9sVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLkFERF9OT1RJRklDQVRJT05dOiB1aVN0YXRlVXBkYXRlcnMuYWRkTm90aWZpY2F0aW9uVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlJFTU9WRV9OT1RJRklDQVRJT05dOiB1aVN0YXRlVXBkYXRlcnMucmVtb3ZlTm90aWZpY2F0aW9uVXBkYXRlcixcblxuICBbQWN0aW9uVHlwZXMuU0VUX1JBVElPXTogdWlTdGF0ZVVwZGF0ZXJzLnNldFJhdGlvVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlNFVF9SRVNPTFVUSU9OXTogdWlTdGF0ZVVwZGF0ZXJzLnNldFJlc29sdXRpb25VcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuVE9HR0xFX0xFR0VORF06IHVpU3RhdGVVcGRhdGVycy50b2dnbGVMZWdlbmRVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuU1RBUlRfRVhQT1JUSU5HX0lNQUdFXTogdWlTdGF0ZVVwZGF0ZXJzLnN0YXJ0RXhwb3J0aW5nSW1hZ2UsXG4gIFtBY3Rpb25UeXBlcy5TRVRfRVhQT1JUX0lNQUdFX0RBVEFfVVJJXTogdWlTdGF0ZVVwZGF0ZXJzLnNldEV4cG9ydEltYWdlRGF0YVVyaSxcbiAgW0FjdGlvblR5cGVzLkNMRUFOVVBfRVhQT1JUX0lNQUdFXTogdWlTdGF0ZVVwZGF0ZXJzLmNsZWFudXBFeHBvcnRJbWFnZSxcblxuICBbQWN0aW9uVHlwZXMuU0VUX0VYUE9SVF9TRUxFQ1RFRF9EQVRBU0VUXTogdWlTdGF0ZVVwZGF0ZXJzLnNldEV4cG9ydFNlbGVjdGVkRGF0YXNldFVwZGF0ZXIsXG4gIFtBY3Rpb25UeXBlcy5TRVRfRVhQT1JUX0RBVEFfVFlQRV06IHVpU3RhdGVVcGRhdGVycy5zZXRFeHBvcnREYXRhVHlwZVVwZGF0ZXIsXG4gIFtBY3Rpb25UeXBlcy5TRVRfRVhQT1JUX0ZJTFRFUkVEXTogdWlTdGF0ZVVwZGF0ZXJzLnNldEV4cG9ydEZpbHRlcmVkVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlNFVF9FWFBPUlRfREFUQV06IHVpU3RhdGVVcGRhdGVycy5zZXRFeHBvcnREYXRhVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlNFVF9VU0VSX01BUEJPWF9BQ0NFU1NfVE9LRU5dOiB1aVN0YXRlVXBkYXRlcnMuc2V0VXNlck1hcGJveEFjY2Vzc1Rva2VuVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlNFVF9FWFBPUlRfTUFQX0ZPUk1BVF06IHVpU3RhdGVVcGRhdGVycy5zZXRFeHBvcnRNYXBGb3JtYXRcbn07XG5cbi8qIFJlZHVjZXIgKi9cbmV4cG9ydCBjb25zdCB1aVN0YXRlUmVkdWNlckZhY3RvcnkgPSAoaW5pdGlhbFN0YXRlID0ge30pID0+XG4gIGhhbmRsZUFjdGlvbnMoYWN0aW9uSGFuZGxlciwgey4uLnVpU3RhdGVVcGRhdGVycy5JTklUSUFMX1VJX1NUQVRFLCAuLi5pbml0aWFsU3RhdGUsIGluaXRpYWxTdGF0ZX0pO1xuXG5leHBvcnQgZGVmYXVsdCB1aVN0YXRlUmVkdWNlckZhY3RvcnkoKTtcbiJdfQ==